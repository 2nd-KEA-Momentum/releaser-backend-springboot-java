plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.13'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.momentum'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // jjwt-api
    implementation 'io.jsonwebtoken:jjwt-api:0.11.1'

    // jjwt-impl
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1'

    // jjwt-jackson (or jjwt-gson if Gson is preferred)
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.1'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // queryDSL 설정
    implementation "com.querydsl:querydsl-jpa"
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
    annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드

    //쿼리 로그 남기기
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'

    // ModelMapper
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.0.0'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Gson
    implementation 'com.google.code.gson:gson:2.9.0'


    // redis
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'


    // Spring Security
//    implementation "org.springframework.boot:spring-boot-starter-security"
//    implementation "org.springframework.security:spring-security-test"

    //oauth2
//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}
jar{
    enabled = false
}
